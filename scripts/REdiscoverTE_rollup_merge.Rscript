#!/usr/bin/env Rscript


#	module load r


library("optparse")
 
option_list = list(
#	make_option(c("-p", "--plot_prefix"), type="character", default=NULL, 
#		help="plot title prefix", metavar="character"),
#	make_option(c("-m", "--manhattan"), type="character", default=NULL, 
#		help="manhattan.plot file name", metavar="character"),
#	make_option(c("-q", "--qq"), type="character", default=NULL, 
#		help="qq file name", metavar="character"),
#	make_option(c("-o", "--outpath"), type="character", default="./", 
#		help="output file name [default= %default]", metavar="character")

	optparse::make_option(c("-o", "--outdir"), dest="outdir", type="character", default='rollup_output_dir',
		help="The output directory for Rollup results, which will be created by this program.")
); 
 
opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);





#	--dirs rollup.00 rollup.01 rollup.02
#	--out rollup.merged

#dirs=c(
#	'rollup/rollup.00',
#	'rollup/rollup.01')

#	'rollup/rollup.02',
#	'rollup/rollup.03',
#	'rollup/rollup.04')

files=c(
	'GENE_1_raw_counts.RDS',
	'GENE_2_counts_normalized.RDS',
	'GENE_3_TPM.RDS',
	'RE_all_1_raw_counts.RDS',
	'RE_all_2_counts_normalized.RDS',
	'RE_all_3_TPM.RDS',
	'RE_all_repFamily_1_raw_counts.RDS',
	'RE_all_repFamily_2_counts_normalized.RDS',
	'RE_all_repFamily_3_TPM.RDS',
	'RE_exon_1_raw_counts.RDS',
	'RE_exon_2_counts_normalized.RDS',
	'RE_exon_3_TPM.RDS',
	'RE_exon_repFamily_1_raw_counts.RDS',
	'RE_exon_repFamily_2_counts_normalized.RDS',
	'RE_exon_repFamily_3_TPM.RDS',
	'RE_intergenic_1_raw_counts.RDS',
	'RE_intergenic_2_counts_normalized.RDS',
	'RE_intergenic_3_TPM.RDS',
	'RE_intergenic_repFamily_1_raw_counts.RDS',
	'RE_intergenic_repFamily_2_counts_normalized.RDS',
	'RE_intergenic_repFamily_3_TPM.RDS',
	'RE_intron_1_raw_counts.RDS',
	'RE_intron_2_counts_normalized.RDS',
	'RE_intron_3_TPM.RDS',
	'RE_intron_repFamily_1_raw_counts.RDS',
	'RE_intron_repFamily_2_counts_normalized.RDS',
	'RE_intron_repFamily_3_TPM.RDS')

#	mkdir out
#outdir="rollup/rollup.merged"
outdir=paste(opt$outdir,"rollup.merged",sep='/')
#mkdir(outdir)
dir.create(outdir, showWarnings = TRUE, recursive = FALSE, mode = "0700")



#	can't use length(list(dge)) as it always returns 2?


for( file in files ){
	first=TRUE
	message(file)
	#for( dir in dirs ){
	#for( dir in list.files(path='rollup', pattern='rollup...$', full.names = TRUE)){
	for( dir in list.files(path=opt$outdir, pattern='rollup...$', full.names = TRUE)){
		message(dir)
		if( first ){
			message("Reading first")
			first=FALSE
			a=readRDS( paste(dir,file,sep='/') )
			res=a
		} else {
			message("Merging")
			b = readRDS( paste(dir,file,sep='/') )

			mergedCounts=merge(
				as.data.frame(a$counts),
				as.data.frame(b$counts),
				by = 'row.names', all = TRUE)
			row.names(mergedCounts)=mergedCounts$Row.names
			mergedCounts= mergedCounts[,!(names(mergedCounts)=='Row.names')]
			mergedCounts[is.na(mergedCounts)] = 0
	
			mergedSamples=rbind(a$samples,b$samples)
	
			mergedGenes=unique(rbind(a$genes,b$genes))

			res <- DGEList(counts=mergedCounts,
				samples=mergedSamples,
				genes=mergedGenes)
			res$samples<-res$samples[,!(names(res$samples) %in% c("lib.size.1", "norm.factors.1"))]

			a=res
		}
	}
	message("Writing MERGED")
	#saveRDS(res, file=file.path(outdir,file))
	saveRDS(res, file=file.path(opt$outdir,file))
}


